
from collections import deque

__author__ = 'Daniel'


class TreeNode(object):
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None


class Codec:
    def serialize(self, root):
        
        if not root:
            return "n"u"l"l""
""
"" "" "" "" "" "" "" "" ""r""e""t"" ""="" ""[""]""
"" "" "" "" "" "" "" "" ""q"" ""="" ""[""]""
"" "" "" "" "" "" "" "" ""q"".""a""p""p""e""n""d""(""r""o""o""t"")""
"" "" "" "" "" "" "" "" ""r""e""t"".""a""p""p""e""n""d""(""s""t""r""(""r""o""o""t"".""v""a""l"")"")"" "" ""#"" ""a""d""d"" ""r""e""s""u""l""t"" ""w""h""e""n"" ""e""n""q""u""e""u""e""
"" "" "" "" "" "" "" "" ""w""h""i""l""e"" ""q"":""
"" "" "" "" "" "" "" "" "" "" "" "" ""l"" ""="" ""l""e""n""(""q"")""
"" "" "" "" "" "" "" "" "" "" "" "" ""f""o""r"" ""i"" ""i""n"" ""x""r""a""n""g""e""(""l"")"":""
"" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""c""u""r"" ""="" ""q""[""i""]""
"" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""i""f"" ""c""u""r"".""l""e""f""t"":"" ""q"".""a""p""p""e""n""d""(""c""u""r"".""l""e""f""t"")""
"" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""r""e""t"".""a""p""p""e""n""d""(""s""e""l""f"".""e""n""c""o""d""e""(""c""u""r"".""l""e""f""t"")"")""
"" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""i""f"" ""c""u""r"".""r""i""g""h""t"":"" ""q"".""a""p""p""e""n""d""(""c""u""r"".""r""i""g""h""t"")""
"" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""r""e""t"".""a""p""p""e""n""d""(""s""e""l""f"".""e""n""c""o""d""e""(""c""u""r"".""r""i""g""h""t"")"")""
""
"" "" "" "" "" "" "" "" "" "" "" "" ""q"" ""="" ""q""[""l"":""]""
""
"" "" "" "" "" "" "" "" ""r""e""t""u""r""n"" 
        Decodes your encoded data to tree.
        decode: 1, 2, 3, null, null, 4, 5, null, null, null, null
        :type data: str
        :rtype: TreeNode
        